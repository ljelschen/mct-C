
Lab6Versuch2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  00000204  00000278  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000204  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000027e  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000002b0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000070  00000000  00000000  000002f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000cc9  00000000  00000000  00000360  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000076e  00000000  00000000  00001029  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000004a2  00000000  00000000  00001797  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000f0  00000000  00000000  00001c3c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000436  00000000  00000000  00001d2c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000557  00000000  00000000  00002162  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000060  00000000  00000000  000026b9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e4 e0       	ldi	r30, 0x04	; 4
  7c:	f2 e0       	ldi	r31, 0x02	; 2
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a6 30       	cpi	r26, 0x06	; 6
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
  8a:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <main>
  8e:	0c 94 00 01 	jmp	0x200	; 0x200 <_exit>

00000092 <__bad_interrupt>:
  92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <lcd_enable>:
    for ( uint8_t i=0; i<8; i++ )
    {
        lcd_data( data[i] );
    }
    lcd_command(LCD_SET_DDADR); //DRAM auf 0 setzen
  96:	8b b1       	in	r24, 0x0b	; 11
  98:	80 62       	ori	r24, 0x20	; 32
  9a:	8b b9       	out	0x0b, r24	; 11
  9c:	85 e3       	ldi	r24, 0x35	; 53
  9e:	8a 95       	dec	r24
  a0:	f1 f7       	brne	.-4      	; 0x9e <lcd_enable+0x8>
  a2:	00 00       	nop
  a4:	8b b1       	in	r24, 0x0b	; 11
  a6:	8f 7d       	andi	r24, 0xDF	; 223
  a8:	8b b9       	out	0x0b, r24	; 11
  aa:	08 95       	ret

000000ac <lcd_out>:
  ac:	9b b1       	in	r25, 0x0b	; 11
  ae:	90 7f       	andi	r25, 0xF0	; 240
  b0:	9b b9       	out	0x0b, r25	; 11
  b2:	9b b1       	in	r25, 0x0b	; 11
  b4:	82 95       	swap	r24
  b6:	8f 70       	andi	r24, 0x0F	; 15
  b8:	98 2b       	or	r25, r24
  ba:	9b b9       	out	0x0b, r25	; 11
  bc:	0e 94 4b 00 	call	0x96	; 0x96 <lcd_enable>
  c0:	08 95       	ret

000000c2 <lcd_data>:
  c2:	cf 93       	push	r28
  c4:	c8 2f       	mov	r28, r24
  c6:	8b b1       	in	r24, 0x0b	; 11
  c8:	80 61       	ori	r24, 0x10	; 16
  ca:	8b b9       	out	0x0b, r24	; 11
  cc:	8c 2f       	mov	r24, r28
  ce:	0e 94 56 00 	call	0xac	; 0xac <lcd_out>
  d2:	8c 2f       	mov	r24, r28
  d4:	82 95       	swap	r24
  d6:	80 7f       	andi	r24, 0xF0	; 240
  d8:	0e 94 56 00 	call	0xac	; 0xac <lcd_out>
  dc:	8a e7       	ldi	r24, 0x7A	; 122
  de:	8a 95       	dec	r24
  e0:	f1 f7       	brne	.-4      	; 0xde <lcd_data+0x1c>
  e2:	00 c0       	rjmp	.+0      	; 0xe4 <lcd_data+0x22>
  e4:	cf 91       	pop	r28
  e6:	08 95       	ret

000000e8 <lcd_command>:
  e8:	cf 93       	push	r28
  ea:	c8 2f       	mov	r28, r24
  ec:	8b b1       	in	r24, 0x0b	; 11
  ee:	8f 7e       	andi	r24, 0xEF	; 239
  f0:	8b b9       	out	0x0b, r24	; 11
  f2:	8c 2f       	mov	r24, r28
  f4:	0e 94 56 00 	call	0xac	; 0xac <lcd_out>
  f8:	8c 2f       	mov	r24, r28
  fa:	82 95       	swap	r24
  fc:	80 7f       	andi	r24, 0xF0	; 240
  fe:	0e 94 56 00 	call	0xac	; 0xac <lcd_out>
 102:	80 e7       	ldi	r24, 0x70	; 112
 104:	8a 95       	dec	r24
 106:	f1 f7       	brne	.-4      	; 0x104 <lcd_command+0x1c>
 108:	cf 91       	pop	r28
 10a:	08 95       	ret

0000010c <lcd_clear>:
 10c:	81 e0       	ldi	r24, 0x01	; 1
 10e:	0e 94 74 00 	call	0xe8	; 0xe8 <lcd_command>
 112:	8f e9       	ldi	r24, 0x9F	; 159
 114:	9f e0       	ldi	r25, 0x0F	; 15
 116:	01 97       	sbiw	r24, 0x01	; 1
 118:	f1 f7       	brne	.-4      	; 0x116 <lcd_clear+0xa>
 11a:	00 c0       	rjmp	.+0      	; 0x11c <lcd_clear+0x10>
 11c:	00 00       	nop
 11e:	08 95       	ret

00000120 <lcd_init>:
 120:	8a b1       	in	r24, 0x0a	; 10
 122:	8f 63       	ori	r24, 0x3F	; 63
 124:	8a b9       	out	0x0a, r24	; 10
 126:	8b b1       	in	r24, 0x0b	; 11
 128:	80 7c       	andi	r24, 0xC0	; 192
 12a:	8b b9       	out	0x0b, r24	; 11
 12c:	8f e2       	ldi	r24, 0x2F	; 47
 12e:	95 e7       	ldi	r25, 0x75	; 117
 130:	01 97       	sbiw	r24, 0x01	; 1
 132:	f1 f7       	brne	.-4      	; 0x130 <lcd_init+0x10>
 134:	00 c0       	rjmp	.+0      	; 0x136 <lcd_init+0x16>
 136:	00 00       	nop
 138:	80 e3       	ldi	r24, 0x30	; 48
 13a:	0e 94 56 00 	call	0xac	; 0xac <lcd_out>
 13e:	8f e0       	ldi	r24, 0x0F	; 15
 140:	97 e2       	ldi	r25, 0x27	; 39
 142:	01 97       	sbiw	r24, 0x01	; 1
 144:	f1 f7       	brne	.-4      	; 0x142 <lcd_init+0x22>
 146:	00 c0       	rjmp	.+0      	; 0x148 <lcd_init+0x28>
 148:	00 00       	nop
 14a:	0e 94 4b 00 	call	0x96	; 0x96 <lcd_enable>
 14e:	8f ec       	ldi	r24, 0xCF	; 207
 150:	97 e0       	ldi	r25, 0x07	; 7
 152:	01 97       	sbiw	r24, 0x01	; 1
 154:	f1 f7       	brne	.-4      	; 0x152 <lcd_init+0x32>
 156:	00 c0       	rjmp	.+0      	; 0x158 <lcd_init+0x38>
 158:	00 00       	nop
 15a:	0e 94 4b 00 	call	0x96	; 0x96 <lcd_enable>
 15e:	8f ec       	ldi	r24, 0xCF	; 207
 160:	97 e0       	ldi	r25, 0x07	; 7
 162:	01 97       	sbiw	r24, 0x01	; 1
 164:	f1 f7       	brne	.-4      	; 0x162 <lcd_init+0x42>
 166:	00 c0       	rjmp	.+0      	; 0x168 <lcd_init+0x48>
 168:	00 00       	nop
 16a:	80 e2       	ldi	r24, 0x20	; 32
 16c:	0e 94 56 00 	call	0xac	; 0xac <lcd_out>
 170:	8f e0       	ldi	r24, 0x0F	; 15
 172:	97 e2       	ldi	r25, 0x27	; 39
 174:	01 97       	sbiw	r24, 0x01	; 1
 176:	f1 f7       	brne	.-4      	; 0x174 <lcd_init+0x54>
 178:	00 c0       	rjmp	.+0      	; 0x17a <lcd_init+0x5a>
 17a:	00 00       	nop
 17c:	88 e2       	ldi	r24, 0x28	; 40
 17e:	0e 94 74 00 	call	0xe8	; 0xe8 <lcd_command>
 182:	8c e0       	ldi	r24, 0x0C	; 12
 184:	0e 94 74 00 	call	0xe8	; 0xe8 <lcd_command>
 188:	86 e0       	ldi	r24, 0x06	; 6
 18a:	0e 94 74 00 	call	0xe8	; 0xe8 <lcd_command>
 18e:	0e 94 86 00 	call	0x10c	; 0x10c <lcd_clear>
 192:	08 95       	ret

00000194 <lcd_setcursor>:
 194:	62 30       	cpi	r22, 0x02	; 2
 196:	59 f0       	breq	.+22     	; 0x1ae <lcd_setcursor+0x1a>
 198:	18 f4       	brcc	.+6      	; 0x1a0 <lcd_setcursor+0xc>
 19a:	61 30       	cpi	r22, 0x01	; 1
 19c:	31 f0       	breq	.+12     	; 0x1aa <lcd_setcursor+0x16>
 19e:	08 95       	ret
 1a0:	63 30       	cpi	r22, 0x03	; 3
 1a2:	39 f0       	breq	.+14     	; 0x1b2 <lcd_setcursor+0x1e>
 1a4:	64 30       	cpi	r22, 0x04	; 4
 1a6:	39 f0       	breq	.+14     	; 0x1b6 <lcd_setcursor+0x22>
 1a8:	08 95       	ret
 1aa:	80 58       	subi	r24, 0x80	; 128
 1ac:	05 c0       	rjmp	.+10     	; 0x1b8 <lcd_setcursor+0x24>
 1ae:	80 54       	subi	r24, 0x40	; 64
 1b0:	03 c0       	rjmp	.+6      	; 0x1b8 <lcd_setcursor+0x24>
 1b2:	80 57       	subi	r24, 0x70	; 112
 1b4:	01 c0       	rjmp	.+2      	; 0x1b8 <lcd_setcursor+0x24>
 1b6:	80 53       	subi	r24, 0x30	; 48
 1b8:	0e 94 74 00 	call	0xe8	; 0xe8 <lcd_command>
 1bc:	08 95       	ret

000001be <lcd_string>:
 1be:	cf 93       	push	r28
 1c0:	df 93       	push	r29
 1c2:	ec 01       	movw	r28, r24
 1c4:	03 c0       	rjmp	.+6      	; 0x1cc <lcd_string+0xe>
 1c6:	21 96       	adiw	r28, 0x01	; 1
 1c8:	0e 94 61 00 	call	0xc2	; 0xc2 <lcd_data>
 1cc:	88 81       	ld	r24, Y
 1ce:	81 11       	cpse	r24, r1
 1d0:	fa cf       	rjmp	.-12     	; 0x1c6 <lcd_string+0x8>
 1d2:	df 91       	pop	r29
 1d4:	cf 91       	pop	r28
 1d6:	08 95       	ret

000001d8 <main>:
#include "lcd-routines.c"
#include "lcd-routines.h"

int main(void)
{
	lcd_init();
 1d8:	0e 94 90 00 	call	0x120	; 0x120 <lcd_init>
	
	lcd_data(1);
 1dc:	81 e0       	ldi	r24, 0x01	; 1
 1de:	0e 94 61 00 	call	0xc2	; 0xc2 <lcd_data>
	lcd_data(2);
 1e2:	82 e0       	ldi	r24, 0x02	; 2
 1e4:	0e 94 61 00 	call	0xc2	; 0xc2 <lcd_data>
	lcd_data(3);
 1e8:	83 e0       	ldi	r24, 0x03	; 3
 1ea:	0e 94 61 00 	call	0xc2	; 0xc2 <lcd_data>
	
	lcd_setcursor(0, 2);
 1ee:	62 e0       	ldi	r22, 0x02	; 2
 1f0:	80 e0       	ldi	r24, 0x00	; 0
 1f2:	0e 94 ca 00 	call	0x194	; 0x194 <lcd_setcursor>
	
	lcd_string("Nils");
 1f6:	80 e0       	ldi	r24, 0x00	; 0
 1f8:	91 e0       	ldi	r25, 0x01	; 1
 1fa:	0e 94 df 00 	call	0x1be	; 0x1be <lcd_string>
 1fe:	ff cf       	rjmp	.-2      	; 0x1fe <main+0x26>

00000200 <_exit>:
 200:	f8 94       	cli

00000202 <__stop_program>:
 202:	ff cf       	rjmp	.-2      	; 0x202 <__stop_program>
