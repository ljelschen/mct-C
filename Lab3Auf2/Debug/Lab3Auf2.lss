
Lab3Auf2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000332  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000002be  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000c  00800100  00800100  00000332  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000332  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000364  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000038  00000000  00000000  000003a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000074e  00000000  00000000  000003dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000064a  00000000  00000000  00000b2a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000037c  00000000  00000000  00001174  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000009c  00000000  00000000  000014f0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003c0  00000000  00000000  0000158c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000000cb  00000000  00000000  0000194c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000028  00000000  00000000  00001a17  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3c 00 	jmp	0x78	; 0x78 <__ctors_end>
   4:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
   8:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
   c:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  10:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  14:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  18:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  1c:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  20:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  24:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  28:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  2c:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  30:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  34:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  38:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  3c:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  40:	0c 94 c9 00 	jmp	0x192	; 0x192 <__vector_16>
  44:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  48:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  4c:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  50:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  54:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  58:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  5c:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  60:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  64:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  68:	8a 00       	.word	0x008a	; ????
  6a:	91 00       	.word	0x0091	; ????
  6c:	94 00       	.word	0x0094	; ????
  6e:	97 00       	.word	0x0097	; ????
  70:	9a 00       	.word	0x009a	; ????
  72:	9d 00       	.word	0x009d	; ????
  74:	a0 00       	.word	0x00a0	; ????
  76:	a4 00       	.word	0x00a4	; ????

00000078 <__ctors_end>:
  78:	11 24       	eor	r1, r1
  7a:	1f be       	out	0x3f, r1	; 63
  7c:	cf ef       	ldi	r28, 0xFF	; 255
  7e:	d8 e0       	ldi	r29, 0x08	; 8
  80:	de bf       	out	0x3e, r29	; 62
  82:	cd bf       	out	0x3d, r28	; 61

00000084 <__do_clear_bss>:
  84:	21 e0       	ldi	r18, 0x01	; 1
  86:	a0 e0       	ldi	r26, 0x00	; 0
  88:	b1 e0       	ldi	r27, 0x01	; 1
  8a:	01 c0       	rjmp	.+2      	; 0x8e <.do_clear_bss_start>

0000008c <.do_clear_bss_loop>:
  8c:	1d 92       	st	X+, r1

0000008e <.do_clear_bss_start>:
  8e:	ac 30       	cpi	r26, 0x0C	; 12
  90:	b2 07       	cpc	r27, r18
  92:	e1 f7       	brne	.-8      	; 0x8c <.do_clear_bss_loop>
  94:	0e 94 45 01 	call	0x28a	; 0x28a <main>
  98:	0c 94 5d 01 	jmp	0x2ba	; 0x2ba <_exit>

0000009c <__bad_interrupt>:
  9c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a0 <toggle>:
#define BetriebLED 3
#define LuefterLED 4


int toggle(void){
	while((PINB & (1<<Button))){}//entprellen
  a0:	1a 99       	sbic	0x03, 2	; 3
  a2:	fe cf       	rjmp	.-4      	; 0xa0 <toggle>
		
	//status der maschine ändern	
	if(betrieb == 0){
  a4:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <betrieb>
  a8:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <betrieb+0x1>
  ac:	89 2b       	or	r24, r25
  ae:	81 f4       	brne	.+32     	; 0xd0 <toggle+0x30>
		if(!(PORTB & (1<<LuefterLED))){
  b0:	2c 99       	sbic	0x05, 4	; 5
  b2:	1b c0       	rjmp	.+54     	; 0xea <toggle+0x4a>
			betrieb = 1;
  b4:	81 e0       	ldi	r24, 0x01	; 1
  b6:	90 e0       	ldi	r25, 0x00	; 0
  b8:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <betrieb+0x1>
  bc:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <betrieb>
			zaehlerEinschalt = 0;
  c0:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <zaehlerEinschalt+0x1>
  c4:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <zaehlerEinschalt>
		
			PORTB |= (1<<BetriebLED);	
  c8:	85 b1       	in	r24, 0x05	; 5
  ca:	88 60       	ori	r24, 0x08	; 8
  cc:	85 b9       	out	0x05, r24	; 5
  ce:	0d c0       	rjmp	.+26     	; 0xea <toggle+0x4a>
		}
	}else{
		betrieb = 0;
  d0:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <betrieb+0x1>
  d4:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <betrieb>
		zaehlerAusschalt = 0;
  d8:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
  dc:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
		
		if (!(PORTB & (1<<LuefterLED))){
  e0:	2c 99       	sbic	0x05, 4	; 5
  e2:	03 c0       	rjmp	.+6      	; 0xea <toggle+0x4a>
			PORTB &= ~(1<<BetriebLED);
  e4:	85 b1       	in	r24, 0x05	; 5
  e6:	87 7f       	andi	r24, 0xF7	; 247
  e8:	85 b9       	out	0x05, r24	; 5
		}
	}
		
	return 1;
}
  ea:	81 e0       	ldi	r24, 0x01	; 1
  ec:	90 e0       	ldi	r25, 0x00	; 0
  ee:	08 95       	ret

000000f0 <lauflicht>:

int lauflicht(void){
	PORTD = 0;
  f0:	1b b8       	out	0x0b, r1	; 11
	PORTB &= ~(1<<0);
  f2:	85 b1       	in	r24, 0x05	; 5
  f4:	8e 7f       	andi	r24, 0xFE	; 254
  f6:	85 b9       	out	0x05, r24	; 5
	PORTB &= ~(1<<1);
  f8:	85 b1       	in	r24, 0x05	; 5
  fa:	8d 7f       	andi	r24, 0xFD	; 253
  fc:	85 b9       	out	0x05, r24	; 5
	
	switch (lauflichtPos){
  fe:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <lauflichtPos>
 102:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <lauflichtPos+0x1>
 106:	e8 30       	cpi	r30, 0x08	; 8
 108:	f1 05       	cpc	r31, r1
 10a:	38 f5       	brcc	.+78     	; 0x15a <lauflicht+0x6a>
 10c:	ec 5c       	subi	r30, 0xCC	; 204
 10e:	ff 4f       	sbci	r31, 0xFF	; 255
 110:	0c 94 57 01 	jmp	0x2ae	; 0x2ae <__tablejump2__>
		case 0:
			PORTD = 1<<2;
 114:	84 e0       	ldi	r24, 0x04	; 4
 116:	8b b9       	out	0x0b, r24	; 11
			lauflichtRichtung = 0;
 118:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <lauflichtRichtung+0x1>
 11c:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <lauflichtRichtung>
		break;
 120:	1c c0       	rjmp	.+56     	; 0x15a <lauflicht+0x6a>

		case 1:
			PORTD = 1<<3;
 122:	88 e0       	ldi	r24, 0x08	; 8
 124:	8b b9       	out	0x0b, r24	; 11
		break;
 126:	19 c0       	rjmp	.+50     	; 0x15a <lauflicht+0x6a>
		
		case 2:
			PORTD = 1<<4;
 128:	80 e1       	ldi	r24, 0x10	; 16
 12a:	8b b9       	out	0x0b, r24	; 11
		break;
 12c:	16 c0       	rjmp	.+44     	; 0x15a <lauflicht+0x6a>

		case 3:
			PORTD = 1<<5;
 12e:	80 e2       	ldi	r24, 0x20	; 32
 130:	8b b9       	out	0x0b, r24	; 11
		break;
 132:	13 c0       	rjmp	.+38     	; 0x15a <lauflicht+0x6a>

		case 4:
			PORTD = 1<<6;
 134:	80 e4       	ldi	r24, 0x40	; 64
 136:	8b b9       	out	0x0b, r24	; 11
		break;
 138:	10 c0       	rjmp	.+32     	; 0x15a <lauflicht+0x6a>

		case 5:
			PORTD = 1<<7;
 13a:	80 e8       	ldi	r24, 0x80	; 128
 13c:	8b b9       	out	0x0b, r24	; 11
		break;
 13e:	0d c0       	rjmp	.+26     	; 0x15a <lauflicht+0x6a>

		case 6:
			PORTB |= (1<<0);
 140:	85 b1       	in	r24, 0x05	; 5
 142:	81 60       	ori	r24, 0x01	; 1
 144:	85 b9       	out	0x05, r24	; 5
		break;
 146:	09 c0       	rjmp	.+18     	; 0x15a <lauflicht+0x6a>

		case 7:
			PORTB |= (1<<1);
 148:	85 b1       	in	r24, 0x05	; 5
 14a:	82 60       	ori	r24, 0x02	; 2
 14c:	85 b9       	out	0x05, r24	; 5
			lauflichtRichtung = 1;
 14e:	81 e0       	ldi	r24, 0x01	; 1
 150:	90 e0       	ldi	r25, 0x00	; 0
 152:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <lauflichtRichtung+0x1>
 156:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <lauflichtRichtung>
		break;
	}
	
	if(lauflichtRichtung){
 15a:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <lauflichtRichtung>
 15e:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <lauflichtRichtung+0x1>
 162:	89 2b       	or	r24, r25
 164:	51 f0       	breq	.+20     	; 0x17a <lauflicht+0x8a>
		lauflichtPos--;
 166:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <lauflichtPos>
 16a:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <lauflichtPos+0x1>
 16e:	01 97       	sbiw	r24, 0x01	; 1
 170:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <lauflichtPos+0x1>
 174:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <lauflichtPos>
 178:	09 c0       	rjmp	.+18     	; 0x18c <lauflicht+0x9c>
	}else{
		lauflichtPos++;
 17a:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <lauflichtPos>
 17e:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <lauflichtPos+0x1>
 182:	01 96       	adiw	r24, 0x01	; 1
 184:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <lauflichtPos+0x1>
 188:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <lauflichtPos>
	}

	return 1;
}
 18c:	81 e0       	ldi	r24, 0x01	; 1
 18e:	90 e0       	ldi	r25, 0x00	; 0
 190:	08 95       	ret

00000192 <__vector_16>:

ISR( TIMER0_OVF_vect ) {
 192:	1f 92       	push	r1
 194:	0f 92       	push	r0
 196:	0f b6       	in	r0, 0x3f	; 63
 198:	0f 92       	push	r0
 19a:	11 24       	eor	r1, r1
 19c:	2f 93       	push	r18
 19e:	3f 93       	push	r19
 1a0:	4f 93       	push	r20
 1a2:	5f 93       	push	r21
 1a4:	6f 93       	push	r22
 1a6:	7f 93       	push	r23
 1a8:	8f 93       	push	r24
 1aa:	9f 93       	push	r25
 1ac:	af 93       	push	r26
 1ae:	bf 93       	push	r27
 1b0:	ef 93       	push	r30
 1b2:	ff 93       	push	r31
	if(zaehlerLauflicht == 12){
 1b4:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <zaehlerLauflicht>
 1b8:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <zaehlerLauflicht+0x1>
 1bc:	0c 97       	sbiw	r24, 0x0c	; 12
 1be:	61 f4       	brne	.+24     	; 0x1d8 <__vector_16+0x46>
		if (betrieb == 1){
 1c0:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <betrieb>
 1c4:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <betrieb+0x1>
 1c8:	01 97       	sbiw	r24, 0x01	; 1
 1ca:	11 f4       	brne	.+4      	; 0x1d0 <__vector_16+0x3e>
			lauflicht();
 1cc:	0e 94 78 00 	call	0xf0	; 0xf0 <lauflicht>
		}
		zaehlerLauflicht = 0;		
 1d0:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <zaehlerLauflicht+0x1>
 1d4:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <zaehlerLauflicht>
	}

	if (zaehlerEinschalt == 122 && betrieb == 1){
 1d8:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <zaehlerEinschalt>
 1dc:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <zaehlerEinschalt+0x1>
 1e0:	8a 37       	cpi	r24, 0x7A	; 122
 1e2:	91 05       	cpc	r25, r1
 1e4:	59 f4       	brne	.+22     	; 0x1fc <__vector_16+0x6a>
 1e6:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <betrieb>
 1ea:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <betrieb+0x1>
 1ee:	01 97       	sbiw	r24, 0x01	; 1
 1f0:	29 f4       	brne	.+10     	; 0x1fc <__vector_16+0x6a>
		if (!(PORTB & (1<<LuefterLED))){
 1f2:	2c 99       	sbic	0x05, 4	; 5
 1f4:	03 c0       	rjmp	.+6      	; 0x1fc <__vector_16+0x6a>
			PORTB |= (1<<LuefterLED);
 1f6:	85 b1       	in	r24, 0x05	; 5
 1f8:	80 61       	ori	r24, 0x10	; 16
 1fa:	85 b9       	out	0x05, r24	; 5
		}
	}
	
	if (zaehlerAusschalt == 244 && betrieb == 0){
 1fc:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 200:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 204:	84 3f       	cpi	r24, 0xF4	; 244
 206:	91 05       	cpc	r25, r1
 208:	99 f4       	brne	.+38     	; 0x230 <__vector_16+0x9e>
 20a:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <betrieb>
 20e:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <betrieb+0x1>
 212:	89 2b       	or	r24, r25
 214:	69 f4       	brne	.+26     	; 0x230 <__vector_16+0x9e>
		PORTD = 0;
 216:	1b b8       	out	0x0b, r1	; 11
		PORTB &= ~(1<<0);
 218:	85 b1       	in	r24, 0x05	; 5
 21a:	8e 7f       	andi	r24, 0xFE	; 254
 21c:	85 b9       	out	0x05, r24	; 5
		PORTB &= ~(1<<1);
 21e:	85 b1       	in	r24, 0x05	; 5
 220:	8d 7f       	andi	r24, 0xFD	; 253
 222:	85 b9       	out	0x05, r24	; 5
		PORTB &= ~(1<<BetriebLED);
 224:	85 b1       	in	r24, 0x05	; 5
 226:	87 7f       	andi	r24, 0xF7	; 247
 228:	85 b9       	out	0x05, r24	; 5
		PORTB &= ~(1<<LuefterLED);
 22a:	85 b1       	in	r24, 0x05	; 5
 22c:	8f 7e       	andi	r24, 0xEF	; 239
 22e:	85 b9       	out	0x05, r24	; 5
	}
	
	zaehlerLauflicht++;
 230:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <zaehlerLauflicht>
 234:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <zaehlerLauflicht+0x1>
 238:	01 96       	adiw	r24, 0x01	; 1
 23a:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <zaehlerLauflicht+0x1>
 23e:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <zaehlerLauflicht>
	zaehlerEinschalt++;
 242:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <zaehlerEinschalt>
 246:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <zaehlerEinschalt+0x1>
 24a:	01 96       	adiw	r24, 0x01	; 1
 24c:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <zaehlerEinschalt+0x1>
 250:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <zaehlerEinschalt>
	zaehlerAusschalt++;
 254:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 258:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 25c:	01 96       	adiw	r24, 0x01	; 1
 25e:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 262:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
	sei();
 266:	78 94       	sei
}
 268:	ff 91       	pop	r31
 26a:	ef 91       	pop	r30
 26c:	bf 91       	pop	r27
 26e:	af 91       	pop	r26
 270:	9f 91       	pop	r25
 272:	8f 91       	pop	r24
 274:	7f 91       	pop	r23
 276:	6f 91       	pop	r22
 278:	5f 91       	pop	r21
 27a:	4f 91       	pop	r20
 27c:	3f 91       	pop	r19
 27e:	2f 91       	pop	r18
 280:	0f 90       	pop	r0
 282:	0f be       	out	0x3f, r0	; 63
 284:	0f 90       	pop	r0
 286:	1f 90       	pop	r1
 288:	18 95       	reti

0000028a <main>:


int main(void)
{
    DDRD = 0xFF;
 28a:	8f ef       	ldi	r24, 0xFF	; 255
 28c:	8a b9       	out	0x0a, r24	; 10
    PORTD = 0x00;
 28e:	1b b8       	out	0x0b, r1	; 11

    DDRB = 0<<Button | 1<<BetriebLED | 1<<LuefterLED | 1<<0 | 1<<1;
 290:	8b e1       	ldi	r24, 0x1B	; 27
 292:	84 b9       	out	0x04, r24	; 4
    PORTB = 1<<Button | 0<<BetriebLED | 0<<LuefterLED;
 294:	84 e0       	ldi	r24, 0x04	; 4
 296:	85 b9       	out	0x05, r24	; 5

    TCCR0B = 1<<CS00 | 1<<CS02;
 298:	85 e0       	ldi	r24, 0x05	; 5
 29a:	85 bd       	out	0x25, r24	; 37
    TIMSK0 = 1<<TOIE0;
 29c:	81 e0       	ldi	r24, 0x01	; 1
 29e:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7f806e>
	
	sei();
 2a2:	78 94       	sei

    /* Replace with your application code */
    while (1) 
    {
        if((PINB & (1<<Button))){
 2a4:	1a 9b       	sbis	0x03, 2	; 3
 2a6:	fe cf       	rjmp	.-4      	; 0x2a4 <main+0x1a>
            toggle();
 2a8:	0e 94 50 00 	call	0xa0	; 0xa0 <toggle>
 2ac:	fb cf       	rjmp	.-10     	; 0x2a4 <main+0x1a>

000002ae <__tablejump2__>:
 2ae:	ee 0f       	add	r30, r30
 2b0:	ff 1f       	adc	r31, r31
 2b2:	05 90       	lpm	r0, Z+
 2b4:	f4 91       	lpm	r31, Z
 2b6:	e0 2d       	mov	r30, r0
 2b8:	09 94       	ijmp

000002ba <_exit>:
 2ba:	f8 94       	cli

000002bc <__stop_program>:
 2bc:	ff cf       	rjmp	.-2      	; 0x2bc <__stop_program>
